<?php
/**
 * @author      Guillaume Gagnaire <contact@42php.com>
 * @link        https://www.github.com/42php/42php
 * @license     https://opensource.org/licenses/mit-license.html MIT
 * @copyright   2015-2017 42php
 */

namespace                       Core;

/**
 * Handles controllers
 *
 * Class Controller
 * @package Core
 */
class 							Controller {
    /** @var int $argc Argument number */
    protected					$argc;
    /** @var array $argv Arguments */
    protected					$argv;

    /**
     * Controller constructor.
     *
     * @param int $argc
     * @param array $argv
     */
    public function 			__construct($argc, $argv) {
        foreach (['argc', 'argv'] as $item)
            $this->$item = $$item;
    }

    /**
     * Checks if a controller exists
     *
     * @param string $name      Controller name
     *
     * @return bool
     */
    public static function      exists($name) {
        list($c, $m) = explode('@', $name);
        return class_exists($c);
    }

    /**
     * Returns the content generated by a controller
     *
     * @param string $name      Controller name (ControllerClass@methodName)
     * @param array $params     Param list
     *
     * @return string           Content
     */
    public static function 		run($name, $params = []) {
        global $argc, $argv;
        list($c, $m) = explode('@', $name);
        if (!class_exists($c))
            return '';
        $obj = new $c($argc, $argv);
        if (!method_exists($obj, $m))
            return '';
        return $obj->$m((object)$params);
    }
}